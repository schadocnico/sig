{"version":3,"sources":["index.js"],"names":["OLMapFragment","props","updateDimensions","bind","h","window","innerWidth","innerHeight","this","setState","height","addEventListener","format","map","Map","target","layers","TileLayer","source","TileWMSSource","ratio","url","params","tiled","tilesOrigin","controls","DefaultControls","extend","ZoomSlider","MousePosition","ScaleLine","OverviewMap","view","View","projection","center","zoom","getView","fit","getSize","removeEventListener","style","width","state","backgroundColor","id","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"0RAoDQA,G,uDAEJ,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,iBAAmB,EAAKA,iBAAiBC,KAAtB,gBAFT,E,+DAKf,IAAMC,EAAIC,OAAOC,YAAc,IAAMD,OAAOE,YAAc,IAC1DC,KAAKC,SAAS,CAACC,OAAQN,M,2CAGvBC,OAAOM,iBAAiB,SAAUH,KAAKN,kBACvCM,KAAKN,qB,0CAGL,IAAIU,EAAS,YAIPC,EAAM,IAAIC,IAAI,CAEhBC,OAAQ,MACRC,OAAQ,CACJ,IAAIC,IAAU,CACVC,OAAQ,IAAIC,IAAc,CACxBC,MAAO,EACPC,IAAK,kDACLC,OAAQ,CAAC,OAAUV,EACV,QAAW,QACd,OAAU,GACV,OAAU,aACV,WAAc,sCAI1B,IAAIK,IAAU,CACVC,OAAQ,IAAIC,IAAc,CACxBC,MAAO,EACPC,IAAK,kDACLC,OAAQ,CAAC,OAAUV,EACV,QAAW,QACXW,OAAO,EACV,OAAU,GACV,OAAU,aACV,WAAc,iCACdC,YAAa,0CAM7BC,SAAUC,cAAkBC,OAAO,CAC/B,IAAIC,IACJ,IAAIC,IACJ,IAAIC,IACJ,IAAIC,MAGRC,KAAM,IAAIC,IAAK,CACXC,WAAY,YACZC,OAAQ,CAAC,EAAG,GACZC,KAAM,MAGdvB,EAAIwB,UAAUC,IAhDD,CAAC,iBAAkB,iBAC5B,iBAAkB,kBA+CIzB,EAAI0B,a,6CAG9BlC,OAAOmC,oBAAoB,SAAUhC,KAAKN,oB,+BAG1C,IAAMuC,EAAQ,CACVC,MAAO,OACPhC,OAAOF,KAAKmC,MAAMjC,OAClBkC,gBAAiB,WAErB,OACI,qBAAKC,GAAG,MAAMJ,MAAOA,Q,GA5EHK,IAAMC,YAkFpC,SAASC,EAAI/C,GAEL,OACI,8BACG,cAACD,EAAD,MAKfiD,IAASC,OACL,cAACF,EAAD,IACAG,SAASC,eAAe,U","file":"static/js/main.1637664d.chunk.js","sourcesContent":["import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\n\n// Start Openlayers imports\nimport { \n    Map,\n    View\n } from 'ol'\nimport {\n    GeoJSON,\n    XYZ\n} from 'ol/format'\nimport {\n    Tile as TileLayer,\n    Vector as VectorLayer\n} from 'ol/layer'\nimport {\n    Vector as VectorSource,\n    OSM as OSMSource,\n    XYZ as XYZSource,\n    TileWMS as TileWMSSource\n} from 'ol/source'\nimport {\n    Select as SelectInteraction,\n    defaults as DefaultInteractions\n} from 'ol/interaction'\nimport { \n    Attribution,\n    ScaleLine,\n    ZoomSlider,\n    Zoom,\n    Rotate,\n    MousePosition,\n    OverviewMap,\n    defaults as DefaultControls\n} from 'ol/control'\nimport {\n    Style,\n    Fill as FillStyle,\n    RegularShape as RegularShapeStyle,\n    Stroke as StrokeStyle\n} from 'ol/style'\n\nimport { \n    Projection,\n    get as getProjection\n } from 'ol/proj'\n\n// End Openlayers imports\n\n\n  class OLMapFragment extends React.Component {\n      \n    constructor(props) {\n        super(props)\n        this.updateDimensions = this.updateDimensions.bind(this)\n    }\n    updateDimensions(){\n        const h = window.innerWidth >= 992 ? window.innerHeight : 400\n        this.setState({height: h})\n    }\n    componentWillMount(){\n        window.addEventListener('resize', this.updateDimensions)\n        this.updateDimensions()\n    }\n    componentDidMount(){\n        let format = 'image/png';\n        let bounds = [1.93954952537819, 47.8448985682432,\n            1.94007434047805, 47.8455632040748];\n        // Create an Openlayer Map instance with two tile layers\n        const map = new Map({\n            //  Display the map in the div with the id of map\n            target: 'map',\n            layers: [\n                new TileLayer({\n                    source: new TileWMSSource({\n                      ratio: 1,\n                      url: 'http://176.169.46.223:8080/geoserver/espace/wms',\n                      params: {'FORMAT': format,\n                               'VERSION': '1.1.1',  \n                            \"STYLES\": '',\n                            \"LAYERS\": 'espace:rdc',\n                            \"exceptions\": 'application/vnd.ogc.se_inimage',\n                      }\n                    })\n                }),\n                new TileLayer({\n                    source: new TileWMSSource({\n                      ratio: 1,\n                      url: 'http://176.169.46.223:8080/geoserver/espace/wms',\n                      params: {'FORMAT': format,\n                               'VERSION': '1.1.1',\n                               tiled: true,\n                            \"STYLES\": '',\n                            \"LAYERS\": 'espace:rdc',\n                            \"exceptions\": 'application/vnd.ogc.se_inimage',\n                            tilesOrigin: 1.93954952537819 + \",\" + 47.8448985682432\n                      }\n                    })\n                })\n            ],\n            // Add in the following map controls\n            controls: DefaultControls().extend([\n                new ZoomSlider(),\n                new MousePosition(),\n                new ScaleLine(),\n                new OverviewMap()\n            ]),\n            // Render the tile layers in a map view with a Mercator projection\n            view: new View({\n                projection: 'EPSG:4326',\n                center: [0, 0],\n                zoom: 2\n            })\n        })\n        map.getView().fit(bounds, map.getSize());\n    }\n    componentWillUnmount(){\n        window.removeEventListener('resize', this.updateDimensions)\n    }\n    render(){\n        const style = {\n            width: '100%',\n            height:this.state.height,\n            backgroundColor: '#cccccc',\n        }\n        return (\n            <div id='map' style={style} >\n            </div>\n        )\n    }\n}\n\nfunction App(props){\n    \n        return (\n            <div>\n               <OLMapFragment />\n            </div>\n        );\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(\"root\")\n);"],"sourceRoot":""}